"Fish doesn't play all that well with others
set shell=/bin/bash
let mapleader = "\<Space>"

"Editor settings
syntax on
set autoread " When a file is changed outside of Vim, just reload it rather than asking what to do.
set nu rnu
set nocp
set timeoutlen=300 " http://stackoverflow.com/questions/2158516/delay-before-o-opens-a-new-line
set tabstop=4
set softtabstop=4
set shiftwidth=4
set ttyfast
set clipboard=unnamed
set noexpandtab
set cursorline
set showcmd
set mouse=a " Might be useful to resize splits with mouse

"Visual boundary ruler
set colorcolumn=80
highlight ColorColumn ctermbg=darkgray

" Common typos
command! W w
command! Wa wa
command! Wq wq
command! Wqa wqa
command! Q q

"""""""PLUGINS"""""""

"Installing pathogen 
execute pathogen#infect()

"lightline.vim
set noshowmode

"NERDTree 
map <C-o> :NERDTreeToggle<CR>
let g:NERDTreeNodeDelimiter = "\u00a0"

"CtrlP
set runtimepath^=~/.vim/bundle/ctrlp.vim


" =============================================================================
" # Keyboard shortcuts
" =============================================================================
" ; as :
nnoremap ; :

" <leader><leader> toggles between buffers
nnoremap <leader><leader> <c-^>

" Quick-save
nmap <leader>w :w<CR>

" Move by line
nnoremap j gj
nnoremap k gk

" Ctrl+k  as Esc

nnoremap <C-k> <Esc>
inoremap <C-k> <Esc>
vnoremap <C-k> <Esc>
snoremap <C-k> <Esc>
xnoremap <C-k> <Esc>
cnoremap <C-k> <Esc>
onoremap <C-k> <Esc>
lnoremap <C-k> <Esc>
tnoremap <C-k> <Esc>

" Ctrl+h to stop searching
vnoremap <C-h> :nohlsearch<cr>
nnoremap <C-h> :nohlsearch<cr>

""""""MISC"""""""

"Disable arrows 
nnoremap <Down> :echoe "Use j"<CR> 
nnoremap <Up> :echoe "Use k"<CR> 
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Left> :echoe "Use h"<CR>

" Protect changes between writes. Default values of
" updatecount (200 keystrokes) and updatetime
" (4 seconds) are fine
set swapfile
set directory^=~/.vim/swap//

" protect against crash-during-write
set writebackup
" but do not persist backup after successful write
set nobackup
" use rename-and-write-new method whenever safe
set backupcopy=auto
" patch required to honor double slash at end
if has("patch-8.1.0251")
	" consolidate the writebackups -- not a big
	" deal either way, since they usually get deleted
	set backupdir^=~/.vim/backup//
end

" persist the undo tree for each file
set undofile
set undodir^=~/.vim/undo//

"""""THEME"""""
" syntax enable
set background=dark
" Base2Tone Dark
" colorscheme Base2Tone_MorningDark
" colorscheme Base2Tone_SeaDark
" colorscheme Base2Tone_SpaceDark
" colorscheme Base2Tone_EarthDark
" colorscheme Base2Tone_ForestDark
" colorscheme Base2Tone_DesertDark
" colorscheme Base2Tone_LakeDark
" colorscheme Base2Tone_MeadowDark
" colorscheme Base2Tone_DrawbridgeDark
" colorscheme Base2Tone_PoolDark
" colorscheme Base2Tone_HeathDark
" colorscheme Base2Tone_CaveDark
colorscheme simplicity
" lightline {{{
" -- INSERT -- is redundant because the mode information is displayed in the statusline:
set noshowmode
let g:lightline = {
      \ 'colorscheme': 'Base2Tone_Pool',
      \ }
" or any of the other colorschemes
" template is smart and detects light or dark colorscheme being used
" }}}


" Stop that stupid window from popping up
map q: :q

" Jump to start and end of line using the home row keys
map H ^
map L $

" Left and right can switch buffers
nnoremap <left> :bp<CR>
nnoremap <right> :bn<CR>

" Proper search
set incsearch
set ignorecase
set smartcase
set gdefault

" Search results centered please
nnoremap <silent> n nzz
nnoremap <silent> N Nzz
nnoremap <silent> * *zz
nnoremap <silent> # #zz
nnoremap <silent> g* g*zz

" Very magic by default
nnoremap ? ?\v
nnoremap / /\v
cnoremap %s/ %sm/

" Yank-highlight duration
let g:highlightedyank_highlight_duration = 300

if has('nvim')
    set guicursor=n-v-c:block-Cursor/lCursor-blinkon0,i-ci:ver25-Cursor/lCursor,r-cr:hor20-Cursor/lCursor
    set inccommand=split
    noremap <C-q> :confirm qall<CR>
end

" Yanking to clipboard is magic!!!
set clipboard+=unnamedplus

" Show those damn hidden characters
" Verbose: set listchars=nbsp:¬,eol:¶,extends:»,precedes:«,trail:•
set listchars=nbsp:¬,extends:»,precedes:«,trail:•

"Type <Space>o to open a new file:
nnoremap <Leader>o :CtrlP<CR>

" Move by line
nnoremap j gj
nnoremap k gk

" Jump to last edit position on opening file
if has("autocmd")
  " https://stackoverflow.com/questions/31449496/vim-ignore-specifc-file-in-autocommand
  au BufReadPost * if expand('%:p') !~# '\m/\.git/' && line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif
